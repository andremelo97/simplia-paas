{
  "permissions": {
    "allow": [
      "Bash(git commit -m \"$(cat <<''EOF''\nfix: remove debug logs and add CORS origin logging\n\n**Rate Limit Fix:**\n- Removed all debug console.log statements from appAccess middleware\n- Logs were causing 500 logs/sec rate limit on Railway\n\n**CORS Debugging:**\n- Added single error log showing blocked origin vs allowed origins\n- Will help identify why TQ origin is being blocked in production\n\n**Root Cause:**\n- TQ_ORIGIN env var has typo: tq.simplialabs.c (missing ''o'')\n- Should be: https://tq.simplialabs.co\n- Fix in Railway variables after this deploy\n\n🤖 Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git commit -m \"$(cat <<''EOF''\nfeat: implement transcription quota management system with usage validation\n\n**Transcription Plans (Internal Admin):**\n- Complete CRUD for transcription plans (Basic, VIP, Custom)\n- Plan configuration: monthly limits, custom limits, overage control\n- Soft delete with usage validation (prevents deactivating plans in use)\n- ConfirmDialog modal for deactivate action with tenant usage feedback\n- Auto-feedback via HTTP interceptor for success/error states\n- Fixed camelCase to snake_case conversion in PUT endpoint\n\n**Transcription Usage (Hub Self-Service):**\n- Usage dashboard showing current month consumption and history\n- Real-time progress bar with percentage and remaining minutes\n- Conditional premium features based on plan permissions:\n  - Custom monthly limit input (if allowsCustomLimits)\n  - Overage toggle (if allowsOverage)\n- Single save button with smart change detection\n- Upgrade CTA for non-premium plans with gradient styling\n- Full pt-BR and en-US translations\n\n**Validation & UX Improvements:**\n- Backend validation blocks deactivating plans assigned to tenants\n- Returns detailed error with tenant names (up to 3 shown)\n- Clickable Checkbox component (label htmlFor fix)\n- Hub Layout scroll fix (overflow-y-auto)\n- Auto-feedback for known error codes (PLAN_IN_USE)\n\n**Technical Details:**\n- Models: TranscriptionPlan with softDelete validation\n- Routes: /transcription-plans, /configurations/transcription\n- Feedback catalog: PLAN_IN_USE, TRANSCRIPTION_PLAN_* codes\n- HTTP interceptor: Auto-publish feedback for catalog errors\n\n🤖 Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git commit -m \"$(cat <<''EOF''\nfix: conditional delete, transcription quota fix, UI improvements, and toast auto-dismiss\n\n**Delete Rules & Session Management:**\n- Added conditional delete for Sessions (validates no quotes/reports before delete)\n- Removed delete buttons from Quotes, Clinical Reports, and Items (cannot delete)\n- Removed delete button from Public Quote Templates (only inactivate allowed)\n- Added ConfirmDialog for session deletion with translations (pt-BR + en-US)\n- Backend validation returns error codes: SESSION_HAS_QUOTES, SESSION_HAS_REPORTS\n\n**Transcription Access Fix (CRITICAL):**\n- Fixed incorrect access validation in transcriptionQuota middleware\n- Access now controlled by JWT allowedApps only (not tenant_transcription_config)\n- tenant_transcription_config controls quotas/limits, NOT access permissions\n- Users with TQ app access can transcribe even without explicit config\n- Middleware uses defaults (60 min/month, no overage) if config not found\n- Only blocks on quota exceeded (429), not missing config (403)\n\n**Audio Upload Progress Feedback:**\n- Fixed modal resetting immediately after file selection\n- Added detailed progress UI with percentages (33%, 66%, 90%)\n- Progress shows status messages: uploading, starting transcription, transcribing\n- Replaced hardcoded blue colors with Simplia brand colors (cyan)\n- Uses CSS global variables: --brand-tertiary, --brand-tertiary-bg\n\n**Toast Auto-Dismiss:**\n- Internal-admin and TQ toasts auto-dismiss after 10 seconds\n- Prevents toast overflow for multiple operations\n\n**Duplicate Tenant Prevention:**\n- Added validation to prevent duplicate tenant names\n- DUPLICATE_TENANT_NAME error code in feedback catalog\n\n**Bug Fixes:**\n- Fixed deleteTemplate method missing in templates service (added alias)\n- Fixed i18n interpolation syntax in ConfirmDialog ({{ }} format)\n- Fixed Home.tsx localhost URL redirect (uses window.location.origin)\n\n**Documentation Updates:**\n- Updated docs/tq-api.md with DELETE /sessions endpoint documentation\n- Updated docs/transcription-quota-system.md middleware section\n- Clarified access control vs quota management separation\n\n**Translation Updates:**\n- Added session delete confirmation messages (pt-BR + en-US)\n- Added SESSION_HAS_QUOTES and SESSION_HAS_REPORTS feedback messages\n\n**Files Modified:**\n- Backend: Session.js, sessions.js, transcriptionQuota.js, templates.ts\n- Frontend: Sessions.tsx, AudioUploadModal.tsx, QuoteRow.tsx, ClinicalReportRow.tsx\n- Docs: tq-api.md, transcription-quota-system.md\n- Translations: common.json, tq.json (pt-BR + en-US)\n\n🤖 Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git add -A)",
      "Bash(git commit -m \"$(cat <<''EOF''\nfix: webhook 400 error - bypass tenant middleware for Deepgram callback\n\n**Problem:**\n- Deepgram webhook was returning 400 (10 attempts failed)\n- Webhook route was behind tenant/auth middlewares in tq-api.js\n- Deepgram cannot send x-tenant-id header (external service)\n- Tenant middleware was rejecting webhook: \"No tenant identifier found\"\n\n**Root Cause:**\n- Webhook registered as part of authenticated routes\n- `/transcriptions/webhook/deepgram` went through tenantMiddleware\n- 2133 logs dropped due to rate limit - couldn''t see the real error\n\n**Solution:**\n- Created separate webhook file: `deepgram-webhook.js`\n- Registered webhook BEFORE tenant/auth middlewares (like public quotes)\n- Webhook now resolves tenant by querying `public.tenants` table\n- TenantId extracted from `callback_metadata` in payload\n- Authentication via HMAC signature only (no JWT required)\n\n**Implementation:**\n1. New file: `src/server/api/tq/routes/deepgram-webhook.js`\n2. Removed webhook from `transcription.js` (now authenticated only)\n3. Registered in `tq-api.js` before authenticated routes:\n   ```javascript\n   app.use(API_PREFIX, publicQuoteAccessRoutes);\n   app.use(API_PREFIX, deepgramWebhookRoutes); // PUBLIC\n   app.use(API_PREFIX, tenantMiddleware, requireAuth, tqRoutes); // AUTHENTICATED\n   ```\n\n**Documentation:**\n- Updated `docs/tq-api.md` with webhook public endpoint explanation\n- Added error handling guide for webhook 400 errors\n- Clarified callback_metadata location (root level, not metadata object)\n- Updated security section to reflect webhook isolation\n\n**Files Changed:**\n- New: `src/server/api/tq/routes/deepgram-webhook.js`\n- Modified: `src/server/api/tq/routes/transcription.js` (removed webhook)\n- Modified: `src/server/tq-api.js` (webhook registration)\n- Modified: `docs/tq-api.md` (documentation)\n\n🤖 Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git add src/client/common/i18n/locales/pt-BR/common.json src/client/common/i18n/locales/en-US/common.json)"
    ],
    "deny": [],
    "ask": []
  }
}
